ORM이란? (Object Relational Mapping)
	어플리케이션의 객체와 관계형 데이터베이스의 데이터를 자동으로 매핑해주는 것을 의미
	- Java의 데이터 클래스와 관계형 데이터베이스의 테이블을 매핑
	객체지향 프로그래밍과 관계형 데이터베이스의 차이로 발생하는 제약사항을 해결해주는 역할을 수행
	Object와 DB테이블을 매핑하여 데이터를 객체화하는 기술
	 	개발자가 반복적인 SQL을 직접 작성하지 않음
		DBMS에 종속적이지 않음
		복잡한 쿼리의 경우 JPQL을 사용하거나 SQL Mapper을 혼용하여 사용 가능
	대표적으로 JPA, Hibernate 등이 있음 (Persistent API)

ORM의 장점
	SQL 쿼리가 아닌 직관적인 코드로 데이터를 조작 가능
	재사용 및 유지보수가 편리
	DBMS에 대한 종속성이 줄어듬
ORM의 단점
	복잡성이 커질 경우 ORM만으로 구현하기 어려움
	잘못 구현할 경우 속도 저하 발생
	대형 쿼리는 별도의 튜닝 필요

JPA란?
	Java Persistance API의 줄임말, ORM관련된 인터페이스 모음
	Java 진영의 표준 ORM
Hibernate란?
	ORM Framework 중 하나
	JPA의 실제 구현체 중 하나이며, 현재 JPA 구현체 중 가장 많이 사용
Spring Data JPA란?
	Spring Framework에서 JPA를 편리하게 사용할 수 있게 지원하는 라이브러리
	CRUD 처리용 인터페이스 제공
	Repository 개발 시 인터페이스만 작성하면 구현 객체를 동적으로 생성해서 주입
	데이터 접근 계층 개발시 인터페이스만 작성해도 됨
	
	Hibernate에서 자주 사용되는 기능을 조금 더 쉽게 사용할 수 있게 구현
	
Controller - Service - DataHandler - DAO - Repository